@model PersonViewModel
@using System.Linq
@{
    ViewBag.Title = "Cadastro -> Pessoa";
}

@using (Html.BeginRouteForm("Post_Person",
                            FormMethod.Post,
                            new { enctype = "multipart/form-data", id = "_personForm" }))
{
    Html.AntiForgeryToken();
    <fieldset>
        <legend>Geral</legend>
        @Html.HiddenFor(m => m.Person.ID)
        @Html.HiddenFor(m => m.Person.DateIns)
        @Html.HiddenFor(m => m.Person.LastUpdate)
        <div class="input-control switch" data-role="input-control">
            <label class="inline-block" style="margin-right: 20px">
                Ativo
                @Html.CheckBoxFor(m => m.Person.IsActive)
                <span class="check"></span>
            </label>
        </div>

        @Html.LabelFor(m => m.Person.Name)
        <div class="input-control text size7" data-role="input-control">
            @Html.TextBoxFor(m => m.Person.Name, new { placeholder = "obrigatório" })
            @Html.ValidationMessageFor(m => m.Person.Name)
        </div>

        @Html.LabelFor(m => m.Person.Email)
        <div class="input-control text size7" data-role="input-control">
            @Html.TextBoxFor(m => m.Person.Email, new { placeholder = "obrigatório" })
            @Html.ValidationMessageFor(m => m.Person.Email)
        </div>
    </fieldset>

    <div class="tab-control" data-role="tab-control" data-effect="fade[slide]">
        <ul class="tabs">
            <li class="active"><a href="#_naturalPerson">Pessoa Física</a></li>
            <li><a href="#_doctor">Médico</a></li>
            <li><a href="#_legalPerson">Pessoa Jurídica</a></li>
        </ul>

        <div class="frames">
            <div class="frame" id="_naturalPerson">
                <div class="panel-content" style="display: block;">
                    @Html.HiddenFor(m => m.Person.NaturalPerson.ID)
                    <div class="input-control switch" data-role="input-control">
                        <label class="inline-block" style="margin-right: 20px">
                            Ativo
                            @Html.CheckBoxFor(m => m.Person.NaturalPerson.IsActive)
                            <span class="check"></span>
                        </label>
                    </div>

                    <div data-role-isactive="true">
                        @Html.LabelFor(m => m.Person.NaturalPerson.Birthdate)
                        <div class="input-control text size4"
                             data-role="datepicker"
                             data-effect="fade">
                            @Html.TextBoxFor(m => m.Person.NaturalPerson.Birthdate, "{0:dd/MM/yyyy}")
                            @Html.Partial("Widgets/_DatePicker")
                            @Html.ValidationMessageFor(m => m.Person.Doctor.AdmissionDate)
                        </div>
                    </div>

                    <div class="clearfix">
                        <div class="input-control radio default-style inline-block" data-role="input-control">
                            @Html.RadioButtonForEnum(m => m.Person.NaturalPerson.Gender)
                        </div>
                        @Html.ValidationMessageFor(m => m.Person.NaturalPerson.Gender)
                    </div>

                    @Html.LabelFor(m => m.Person.NaturalPerson.ProfileImage)
                    <div class="clearfix">
                        @Html.HiddenFor(m => m.Person.NaturalPerson.ProfileImageUrl)
                        @if (!string.IsNullOrWhiteSpace(Model.Person.NaturalPerson.ProfileImageUrl))
                        {
                            <img src="@Model.Person.NaturalPerson.ProfileImageUrl"
                                 class="cycle"
                                 alt="120x120" style="width: 120px; height: 120px;">
                        }
                        <div class="input-control file size8" data-role="input-control">
                            @Html.TextBoxFor(m => m.Person.NaturalPerson.ProfileImage, new { type = "file", accept = "image/*" })
                            <button class="btn-file" type="button"></button>
                        </div>
                        @Html.ValidationMessageFor(m => m.Person.NaturalPerson.ProfileImage)
                    </div>
                </div>
            </div>
            <div class="frame" id="_doctor">
                @Html.HiddenFor(m => m.Person.Doctor.ID)
                <div class="input-control switch" data-role="input-control">
                    <label class="inline-block" style="margin-right: 20px">
                        Ativo
                        @Html.CheckBoxFor(m => m.Person.Doctor.IsActive)
                        <span class="check"></span>
                    </label>
                </div>

                <div data-role-isactive="true">
                    @Html.LabelFor(m => m.Person.Doctor.AdmissionDate)
                    <div class="input-control text size4"
                         data-role="datepicker"
                         data-effect="fade">
                        @Html.TextBoxFor(m => m.Person.Doctor.AdmissionDate, "{0:dd/MM/yyyy}")
                        @Html.Partial("Widgets/_DatePicker")
                        @Html.ValidationMessageFor(m => m.Person.Doctor.AdmissionDate)
                    </div>
                </div>

                @Html.LabelFor(m => m.Person.Doctor.ProfileImage)
                <div class="clearfix">
                    @Html.HiddenFor(m => m.Person.Doctor.ProfileImageUrl)
                    @if (!string.IsNullOrWhiteSpace(Model.Person.Doctor.ProfileImageUrl))
                    {
                        <img src="@Model.Person.Doctor.ProfileImageUrl"
                             class="cycle"
                             alt="120x120" style="width: 120px; height: 120px;">
                    }
                    <div class="input-control file size8" data-role="input-control">
                        @Html.TextBoxFor(m => m.Person.Doctor.ProfileImage, new { type = "file", accept = "image/*" })
                        <button class="btn-file" type="button"></button>
                    </div>
                    @Html.ValidationMessageFor(m => m.Person.Doctor.ProfileImage)
                </div>
            </div>
            <div class="frame" id="_legalPerson">
                @Html.HiddenFor(m => m.Person.LegalPerson.ID)
                <div class="panel-content" style="display: block;">
                    <div class="input-control switch" data-role="input-control">
                        <label class="inline-block" style="margin-right: 20px">
                            Ativo
                            @Html.CheckBoxFor(m => m.Person.LegalPerson.IsActive)
                            <span class="check"></span>
                        </label>
                    </div>

                    @Html.LabelFor(m => m.Person.LegalPerson.CompanyName)
                    <div class="input-control text size7" data-role="input-control">
                        @Html.TextBoxFor(m => m.Person.LegalPerson.CompanyName, new { placeholder = "obrigatório" })
                        @Html.ValidationMessageFor(m => m.Person.LegalPerson.CompanyName)
                    </div>

                    @Html.LabelFor(m => m.Person.LegalPerson.SocialName)
                    <div class="input-control text size7" data-role="input-control">
                        @Html.TextBoxFor(m => m.Person.LegalPerson.SocialName, new { placeholder = "obrigatório" })
                        @Html.ValidationMessageFor(m => m.Person.LegalPerson.SocialName)
                    </div>

                    @Html.LabelFor(m => m.Person.LegalPerson.ProfileImage)
                    <div class="clearfix">
                        @Html.HiddenFor(m => m.Person.LegalPerson.ProfileImageUrl)
                        @if (!string.IsNullOrWhiteSpace(Model.Person.LegalPerson.ProfileImageUrl))
                        {
                            <img src="@Model.Person.LegalPerson.ProfileImageUrl"
                                 class="cycle"
                                 alt="120x120" style="width: 120px; height: 120px;">
                        }
                        <div class="input-control file size8" data-role="input-control">
                            @Html.TextBoxFor(m => m.Person.LegalPerson.ProfileImage, new { type = "file", accept = "image/*" })
                            <button class="btn-file" type="button"></button>
                        </div>
                        @Html.ValidationMessageFor(m => m.Person.LegalPerson.ProfileImage)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="tab-control" data-role="tab-control" data-effect="fade[slide]">
        <ul class="tabs">
            <li class="active"><a href="#_phones">Telefones</a></li>
            <li><a href="#_addresses">Endereços</a></li>            
            <li><a href="#_documents">Documentos</a></li>
        </ul>
        <div class="frames">
            <div class="frame" id="_phones">
                <div id="phonesContainer">
                </div>
            </div>
            <div class="frame" id="_addresses">
                <div id="addessesContainer">
                </div>
            </div>
            <div class="frame" id="_documents">
                <div id="documentsContainer">
                </div>
            </div>
        </div>
    </div>

    <div class="pull-right">
        <input type="reset" class="button large" value="Limpar" />
        <input type="reset" class="button large danger" value="Apagar" />
        <input type="submit" class="button large success" value="Salvar" />
    </div>
}
@section scripts{
    <script type="text/javascript" src="~/Scripts/ViewModels/Person.js"></script>
    <script type="text/javascript">
        person.ID = @Model.Person.ID;
        person.addresses(@Html.Raw(Model.Person.Addresses.Serialize()));
        person.phones(@Html.Raw(Model.Person.Phones.Serialize()));
        person.documents(@Html.Raw(Model.Person.Documents.Serialize()));
    </script>
    <script type="text/javascript">
        ikeNotify.show('@Html.Raw(Model.Notify.Serialize())');
    </script>
}

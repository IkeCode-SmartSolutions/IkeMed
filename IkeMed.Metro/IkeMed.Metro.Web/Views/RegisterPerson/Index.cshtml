@model RegisterPersonViewModel
@{
    ViewBag.Title = string.Format("Cadastro -> {0}", Model.PersonType.GetDisplayName<PersonTypeEnum>());
}

@using (Html.BeginRouteForm("Post_RegisterPerson",
                            new { id = Model.Person.ID },
                            FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
{
    Html.AntiForgeryToken();
    <fieldset>
        <legend>Geral</legend>
        @Html.HiddenFor(m => m.Person.ID)
        <div class="input-control switch" data-role="input-control">
            <label class="inline-block" style="margin-right: 20px">
                Ativo
                @Html.CheckBoxFor(m => m.Person.IsActive)
                <span class="check"></span>
            </label>
        </div>

        @Html.LabelFor(m => m.Person.Name)
        <div class="input-control text size7" data-role="input-control">
            @Html.TextBoxFor(m => m.Person.Name, new { placeholder = "obrigatório" })
            @Html.ValidationMessageFor(m => m.Person.Name)
        </div>

        @Html.LabelFor(m => m.Person.Email)
        <div class="input-control text size7" data-role="input-control">
            @Html.TextBoxFor(m => m.Person.Email, new { placeholder = "obrigatório" })
            @Html.ValidationMessageFor(m => m.Person.Email)
        </div>
    </fieldset>

    if (Model.Person.Doctor != null && Model.Person.Doctor.ID > 0 || Model.PersonType == PersonTypeEnum.Doctor)
    {
        <div class="grid fluid">
            @Html.HiddenFor(m => m.Person.Doctor.ID)
            <div class="row">
                <div class="span12">
                    <div class="panel" data-role="panel">
                        <div class="panel-header bg-dark fg-white">
                            @Html.DisplayNameFor(m => m.Person.Doctor)
                        </div>
                        <div class="panel-content" style="display: block;">
                            <div class="input-control switch" data-role="input-control">
                                <label class="inline-block" style="margin-right: 20px">
                                    Ativo
                                    @Html.CheckBoxFor(m => m.Person.Doctor.IsActive)
                                    <span class="check"></span>
                                </label>
                            </div>

                            <div data-role-isactive="true">
                                @Html.LabelFor(m => m.Person.Doctor.AdmissionDate)
                                <div class="input-control text size4"
                                     data-role="datepicker"
                                     data-effect="fade">
                                    @Html.TextBoxFor(m => m.Person.Doctor.AdmissionDate, "{0:dd/MM/yyyy}")
                                    @Html.Partial("Widgets/_DatePicker")
                                    @Html.ValidationMessageFor(m => m.Person.Doctor.AdmissionDate)
                                </div>
                            </div>

                            @Html.LabelFor(m => m.Person.Doctor.ProfileImage)
                            <div class="clearfix">
                                @Html.HiddenFor(m => m.Person.Doctor.ProfileImageUrl)
                                @if (!string.IsNullOrWhiteSpace(Model.Person.Doctor.ProfileImageUrl))
                                {
                                    <img src="@Model.Person.Doctor.ProfileImageUrl"
                                         class="cycle"
                                         alt="120x120" style="width: 120px; height: 120px;">
                                }
                                <div class="input-control file size8" data-role="input-control">
                                    @Html.TextBoxFor(m => m.Person.Doctor.ProfileImage, new { type = "file", accept = "image/*" })
                                    <button class="btn-file" type="button"></button>
                                </div>
                                @Html.ValidationMessageFor(m => m.Person.Doctor.ProfileImage)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    if (Model.Person.NaturalPerson != null && Model.Person.NaturalPerson.ID > 0 || Model.PersonType == PersonTypeEnum.Natural)
    {
        <div class="grid fluid">
            @Html.HiddenFor(m => m.Person.NaturalPerson.ID)
            <div class="row">
                <div class="span12">
                    <div class="panel" data-role="panel">
                        <div class="panel-header bg-dark fg-white">
                            @Html.DisplayNameFor(m => m.Person.NaturalPerson)
                        </div>
                        <div class="panel-content" style="display: block;">
                            <div class="input-control switch" data-role="input-control">
                                <label class="inline-block" style="margin-right: 20px">
                                    Ativo
                                    @Html.CheckBoxFor(m => m.Person.NaturalPerson.IsActive)
                                    <span class="check"></span>
                                </label>
                            </div>

                            <div data-role-isactive="true">
                                @Html.LabelFor(m => m.Person.NaturalPerson.Birthdate)
                                <div class="input-control text size4"
                                     data-role="datepicker"
                                     data-effect="fade">
                                    @Html.TextBoxFor(m => m.Person.NaturalPerson.Birthdate, "{0:dd/MM/yyyy}")
                                    @Html.Partial("Widgets/_DatePicker")
                                    @Html.ValidationMessageFor(m => m.Person.Doctor.AdmissionDate)
                                </div>
                            </div>

                            <div class="clearfix">
                                <div class="input-control radio default-style inline-block" data-role="input-control">
                                    @Html.RadioButtonForEnum(m => m.Person.NaturalPerson.Gender)
                                </div>
                                @Html.ValidationMessageFor(m => m.Person.NaturalPerson.Gender)
                            </div>

                            @Html.LabelFor(m => m.Person.NaturalPerson.ProfileImage)
                            <div class="clearfix">
                                @Html.HiddenFor(m => m.Person.NaturalPerson.ProfileImageUrl)
                                @if (!string.IsNullOrWhiteSpace(Model.Person.NaturalPerson.ProfileImageUrl))
                                {
                                    <img src="@Model.Person.NaturalPerson.ProfileImageUrl"
                                         class="cycle"
                                         alt="120x120" style="width: 120px; height: 120px;">
                                }
                                <div class="input-control file size8" data-role="input-control">
                                    @Html.TextBoxFor(m => m.Person.NaturalPerson.ProfileImage, new { type = "file", accept = "image/*" })
                                    <button class="btn-file" type="button"></button>
                                </div>
                                @Html.ValidationMessageFor(m => m.Person.NaturalPerson.ProfileImage)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="pull-right">
        <input type="reset" class="button large" value="Limpar" />
        <input type="reset" class="button large danger" value="Apagar" />
        <input type="submit" class="button large success" value="Salvar" />
    </div>
}
@section scripts{
    <script type="text/javascript" src="~/Scripts/ViewModels/RegisterPerson.js"></script>
}